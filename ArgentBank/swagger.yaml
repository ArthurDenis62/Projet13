swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get all transactions for the current user
      description: Retrieve all transactions for the current month, optionally filtered by account ID.
      parameters:
        - name: month
          in: query
          description: Month in YYYY-MM format
          required: true
          type: string
        - name: accountId
          in: query
          description: Optional account ID to filter transactions by account
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Add a new transaction
      description: Add a transaction to a user account
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get transaction details
      description: Retrieve detailed information about a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized

    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update a transaction
      description: Modify the details of an existing transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
        '400':
          description: Invalid input
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized

    delete:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Delete a transaction
      description: Remove a transaction from the system
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Unique transaction ID
      accountId:
        type: string
        description: ID of the associated account
      date:
        type: string
        format: date
        description: Date of the transaction (YYYY-MM-DD)
      amount:
        type: number
        format: float
        description: Transaction amount (positive or negative)
      type:
        type: string
        description: Transaction type (e.g., withdrawal, deposit)
      description:
        type: string
        description: Transaction description
      category:
        type: string
        description: Expense category
      notes:
        type: string
        description: Optional user notes
