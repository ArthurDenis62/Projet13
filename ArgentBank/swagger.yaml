swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Liste des transactions du mois en cours, groupées par compte
      description: |
        Retourne toutes les transactions de l'utilisateur pour le mois spécifié, groupées par compte.
        Possibilité de filtrer par compte avec le paramètre accountId.
      parameters:
        - name: month
          in: query
          description: Mois au format YYYY-MM (ex: 2024-06)
          required: true
          type: string
        - name: accountId
          in: query
          description: ID du compte à filtrer (optionnel)
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Liste des transactions récupérée avec succès, groupées par compte
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    accountId:
                      type: string
                      description: ID du compte
                    transactions:
                      type: array
                      items:
                        $ref: '#/definitions/Transaction'
        '401':
          description: Non autorisé
        '500':
          description: Erreur serveur

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Détail d'une transaction
      description: Retourne le détail d'une transaction spécifique.
      parameters:
        - name: transactionId
          in: path
          description: ID de la transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Détail de la transaction récupéré
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction non trouvée
        '401':
          description: Non autorisé

    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Modifier une transaction
      description: |
        Permet de modifier certaines informations d'une transaction (description, catégorie, notes).
        Les champs montant, date, type ne sont pas modifiables.
      parameters:
        - name: transactionId
          in: path
          description: ID de la transaction à modifier
          required: true
          type: string
        - in: body
          name: body
          description: Champs modifiables de la transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction modifiée avec succès
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Données invalides
        '404':
          description: Transaction non trouvée
        '401':
          description: Non autorisé

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: ID unique de la transaction
      accountId:
        type: string
        description: ID du compte associé
      date:
        type: string
        format: date
        description: Date de la transaction (YYYY-MM-DD)
      amount:
        type: number
        format: float
        description: Montant de la transaction (positif ou négatif)
      type:
        type: string
        description: Type de transaction (ex: withdrawal, deposit)
      description:
        type: string
        description: Description de la transaction
      category:
        type: string
        description: Catégorie de dépense
      notes:
        type: string
        description: Notes utilisateur (optionnel)

  TransactionUpdate:
    type: object
    properties:
      description:
        type: string
        description: Nouvelle description
      category:
        type: string
        description: Nouvelle catégorie
      notes:
        type: string
        description: Notes utilisateur
    required:
      - description
      - category